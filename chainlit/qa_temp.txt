Question:1. 우선순위 큐에서 키가 동일한 두 항목이 있을 때, 이 항목들을 어떻게 처리해야 하는지 설명하고, 그 이유를 서술하시오.2. 힙 정렬 알고리즘을 사용하여 주어진 배열을 정렬하는 과정을 단계별로 설명하시오. 각 단계에서 힙의 상태를 그림으로 나타내시오.3. 완전 이진 트리의 높이가 O(log n)임을 증명하시오. 이 성질이 탐색 연산에 미치는 영향을 설명하시오.4. 우선순위 큐를 사용하여 주어진 요소들을 정렬하는 PQ-Sort 알고리즘의 시간 복잡도를 분석하시오. 이 알고리즘이 다른 정렬 알고리즘과 비교하여 어떤 장단점이 있는지 논의하시오.5. 힙에서 새로운 키를 삽입할 때 힙-순서 속성을 유지하기 위해 수행되는 upheap 알고리즘의 과정을 설명하시오. 예제를 통해 각 단계를 시각적으로 나타내시오.
Answer:1. 우선순위 큐에서 키가 동일한 두 항목이 있을 때, 이 항목들은 큐에 삽입된 순서대로 처리됩니다. 이는 우선순위 큐가 키를 기준으로 정렬되지만, 동일한 키를 가진 항목들 간에는 순서를 유지하기 때문입니다.2. 힙 정렬 알고리즘을 사용하여 배열 [7, 4, 8, 2, 5, 3, 9]을 정렬하는 과정은 다음과 같습니다: 1) 배열을 힙으로 변환, 2) 최대값을 제거하고 힙을 재구성, 3) 이 과정을 반복하여 정렬된 배열을 얻습니다. 각 단계에서 힙의 상태는 그림으로 나타낼 수 있습니다.3. 완전 이진 트리의 높이가 O(log n)임을 증명하기 위해, 트리의 높이를 h라고 할 때, 노드의 수는 최소 2^h개 이상입니다. 따라서 n ≥ 2^h이므로 h ≤ log n이 됩니다. 이 성질은 탐색 연산이 로그 시간에 수행될 수 있음을 의미합니다.4. PQ-Sort 알고리즘의 시간 복잡도는 O(n log n)입니다. 이는 요소를 삽입하는 데 O(log n) 시간이 걸리고, 요소를 제거하는 데도 O(log n) 시간이 걸리기 때문입니다. 다른 정렬 알고리즘과 비교했을 때, PQ-Sort는 안정적이지 않지만, 힙을 사용하여 효율적으로 정렬할 수 있습니다.5. 힙에서 새로운 키를 삽입할 때, upheap 알고리즘은 삽입된 노드에서 시작하여 부모 노드와 비교하며 위로 올라갑니다. 부모 노드의 키가 삽입된 키보다 크면 두 노드를 교환합니다. 이 과정을 반복하여 힙-순서 속성을 유지합니다. 예를 들어, 키 6을 삽입할 때의 과정을 시각적으로 나타낼 수 있습니다.